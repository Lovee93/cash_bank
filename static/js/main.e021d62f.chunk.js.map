{"version":3,"sources":["UserAccount.js","App.js","serviceWorker.js","index.js","users.js"],"names":["UserAccount","props","depositMoney","bind","withdrawMoney","handleLogOut","state","isLoggedIn","users","amount","myIndex","this","setState","findIndex","x","username","bank_balance","reduce","prev","curr","user_balance","parseInt","forceUpdate","console","log","alert","name","placeholder","onChange","event","target","value","onClick","Object","values","Component","App","handleLogin","password","map","user","i","className","type","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e021d62f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport App from './App';\r\n\r\nclass UserAccount extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.depositMoney = this.depositMoney.bind(this);\r\n\t\tthis.withdrawMoney = this.withdrawMoney.bind(this);\r\n\t\tthis.handleLogOut = this.handleLogOut.bind(this);\r\n\t\tthis.state = {\r\n\t\t\tisLoggedIn: true,\r\n\t\t\tusers: '',\r\n\t\t\tamount: 0,\r\n\t\t\tmyIndex: 0,\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillMount(){\r\n\t\tthis.setState({\r\n\t\t\tusers: this.props.users,\r\n\t\t})\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.setState({\r\n\t\t\tusers:  {...this.state.users},\r\n\t\t\tmyIndex: this.state.users.findIndex(x => x.username == this.props.username),\r\n\t\t\tbank_balance: this.state.users.reduce((prev,curr)=>{return prev + curr.user_balance}, 0)\r\n\t\t})\r\n\t}\r\n\r\n\tdepositMoney(state,props) {\r\n\t\tthis.state.users[this.state.myIndex].user_balance = parseInt(this.state.users[this.state.myIndex].user_balance) + parseInt(this.state.amount)\r\n\t\tthis.forceUpdate()\r\n\t\tthis.setState({\r\n\t\t\tbank_balance: parseInt(this.state.bank_balance) + parseInt(this.state.amount),\r\n\t});\r\n\t\tconsole.log(this.state.users[0].user_balance);\r\n\t};\r\n\r\n\twithdrawMoney(state,props) {\r\n\t\tif(parseInt(this.state.users[this.state.myIndex].user_balance) - parseInt(this.state.amount) >= 0){\r\n\t\t\tthis.state.users[this.state.myIndex].user_balance = parseInt(this.state.users[this.state.myIndex].user_balance) - parseInt(this.state.amount)\r\n\t\t \tthis.forceUpdate()\r\n\t\t \tthis.setState({\r\n\t\t \t\tbank_balance: parseInt(this.state.bank_balance) - parseInt(this.state.amount),\r\n\t\t \t});\r\n\t\t}\r\n\t \telse {\r\n\t \t\talert(\"You do not have enough credit!\")\r\n\t \t}\r\n\t};\r\n\r\n\thandleLogOut(props){\r\n\t\tconsole.log(this.state.isLoggedIn)\r\n\t\tthis.setState({\r\n\t\t\tisLoggedIn: false\r\n\t\t})\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { amount, user_balance, bank_balance, isLoggedIn, users, myIndex } = this.state;\r\n\t\treturn(\r\n\t\t\t<>\r\n\t\t\t\t{\r\n\t\t\t\t\tisLoggedIn ? \r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<h3>Greetings {this.props.username}!</h3>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<h5>Your Balance: ${users[myIndex].user_balance}</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<h5>Bank Balance: ${bank_balance}</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<h4>What would you like to do? </h4>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tname='amount'\r\n\t\t\t\t\t\t\t\tplaceholder='Enter amount'\r\n\t\t\t\t\t\t\t\tonChange={(event)=>{this.setState({amount:event.target.value})}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<button name=\"Deposit\" onClick={this.depositMoney}>Deposit</button>\r\n\t\t\t\t\t\t\t<button name=\"Withdraw\" onClick={this.withdrawMoney}>Withdraw</button><br/>\r\n\t\t\t\t\t\t\t<button name=\"Logout\" onClick={this.handleLogOut}>Logout</button>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t: \r\n\t\t\t\t\t\t<App users={Object.values(this.state.users)} bank_balance={bank_balance}/>\r\n\t\t\t\t\t}\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t}\r\n} \r\n\r\nexport default UserAccount;","import React, { Component } from 'react';\nimport './App.css';\nimport UserAccount from './UserAccount';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.handleLogin = this.handleLogin.bind(this);\n    this.state = {\n      username:'',\n      password: '',\n      isLoggedIn: false,\n      users: ''\n    };\n  };\n  \n  componentDidMount() {\n    this.setState({\n      users: this.props.users\n    })\n  }\n  \n  handleLogin() {\n    this.state.users.map((user, i) => {\n      if(this.state.username===this.state.users[i].username)\n        {\n          if(this.state.password==this.state.users[i].password)\n            {\n              this.setState({isLoggedIn:true})\n            }\n          else\n            alert(\"Either username or password is wrong!\")\n        }\n    })\n  }\n\n  render(){\n    const { username, password, isLoggedIn, users } = this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {!isLoggedIn ? <>\n            <h1>Welcome to Cash Bank</h1>\n            <input\n              name='username'\n              value={username}\n              placeholder='Username'\n              onChange={(event)=> {this.setState({username:event.target.value})}}\n              />\n            <input\n              name='password'\n              type='password'\n              value={password}\n              placeholder='Password'\n              onChange={(event)=> {this.setState({password:event.target.value})}}\n              />\n            <button onClick={this.handleLogin}>Submit</button>\n          </>\n          : <UserAccount username={username} users={users}/>}\n        </header>\n      </div>\n    );\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { users } from './users';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App users={users}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const users = [\r\n{\r\n\tusername: '123',\r\n\tpassword: 123,\r\n\tuser_balance: 10,\r\n},\r\n{\r\n\tusername: '111',\r\n\tpassword: 111,\r\n\tuser_balance: 20,\r\n},\r\n{\r\n\tusername: '222',\r\n\tpassword: 222,\r\n\tuser_balance: 30,\r\n},\r\n{\r\n\tusername: '333',\r\n\tpassword: 333,\r\n\tuser_balance: 40,\r\n},\r\n]\r\n"],"sourceRoot":""}